// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Motorista {
  Sim
  Nao
}

model Cliente {
  id        String  @id @default(uuid())
  nome      String
  imagemUrl String?
  telefone  String
  numeroBI  String  @unique
  telefone2 String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Reserva Reserva[]
  Login   Login?
}

model Empresa {
  id            String  @id @default(uuid())
  nome          String
  imagemUrl     String?
  nif           String
  quantidadeCar Int
  telefone      String
  telefone2     String?
  descricao     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Carro Carro[]
  Login Login?
}

model Carro {
  id           String   @id @default(uuid())
  nome         String
  modelo       String
  imagemUrl    String?
  valorAluguel Decimal
  caucao       Decimal?
  fraquia      Decimal?
  empresaId    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Empresa Empresa @relation(fields: [empresaId], references: [id])

  Reserva Reserva[]
}

model Reserva {
  id              String    @id @default(uuid())
  clienteId       String
  carroId         String
  dataEntrga      DateTime
  dataDevolucao   DateTime
  comprovativoUrl String
  nomeAuroporto   String?
  nAviao          String?
  nAcento         String?
  motorista       Motorista @default(Nao)
  nomeHotel       String?
  nQuarto         Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Carro   Carro   @relation(fields: [carroId], references: [id])
  Cliente Cliente @relation(fields: [clienteId], references: [id])
}

model Login {
  email            String  @unique
  clientId         String? @unique
  empresaId        String? @unique
  password         String
  passwordTokenSet String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Cliente Cliente? @relation(fields: [clientId], references: [id])
  Empresa Empresa? @relation(fields: [empresaId], references: [id])

  @@id([email])
}

model Provincia {
  id   String @id @default(uuid())
  nome String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Municipio Municipio[]
}

model Municipio {
  id          String @id @default(uuid())
  nome        String
  provinciaId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Provincia Provincia @relation(fields: [provinciaId], references: [id])

  Distrito Distrito[]
}

model Distrito {
  id          String  @id @default(uuid())
  nome        String
  bairro      String
  rua         String?
  municipioId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Municipio Municipio @relation(fields: [municipioId], references: [id])
}
